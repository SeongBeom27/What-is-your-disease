let mongoose,Schema,bcrypt,jwt;_7b3‍.x([["default",()=>_7b3‍.o]]);_7b3‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}],["Schema",["Schema"],function(v){Schema=v}]]);_7b3‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);_7b3‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);



const UserSchema = new Schema({
  _id: mongoose.Types.ObjectId,
  providerId: String,
  provider: String,
  info: {
    name: String,
    age: Number,
    gender: String,
    bloodtype: String,
    allergy: Array,
    medicines: Array,
  },
});

// 스태틱 메서드
UserSchema.statics.findByproviderId = function (providerId) {
  return this.findOne({ providerId });
};

const User = mongoose.model('User', UserSchema);
_7b3‍.d(User);
